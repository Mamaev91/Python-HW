# Добавьте в модуль с загадками функцию, которая хранит словарь списков.
# Ключ словаря - загадка, значение - список с отгадками.
# Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки.

# def dictionary_quest():
#      dict_quest = {'Мчится печка впереди,Тащит избы позади': ['Поезд', 'паровоз'],
#             'Какое зеленое дерево без листьев растет?': ['Ёлка', 'ель', 'сосна'],
#             'На тоненьком стебельке висят белые колокольчики.': ['Ландыш', 'Ландыши']}
#
#
# def mystery(question: str, answer: list, chanse: int) -> int:
#
#         for i in range(chanse):
#             a = input(' Введите ответ ')
#             if a in answer:
#                 return i + 1
#         return 0
#
#
# if __name__ == '__main__':
#     quest = 'Зимой и летом одним цветом! '
#     ans = ['Елка', 'Ель', 'Елочка']
#     ch = 5
# print(mystery(quest, ans, ch))


# Создайте модуль и напишите в нём функцию, которая получает на вход дату в формате DD.MM.YYYY
# Функция возвращает истину, если дата может существовать или ложь, если такая дата невозможна.
# Для простоты договоримся, что год может быть в диапазоне [1, 9999].
# Весь период (1 января 1 года - 31 декабря 9999 года) действует Григорианский календарь.
# Проверку года на високосность вынести в отдельную защищённую функцию.

data_1 = input('Введите дату в формате DD.MM.YYYY: ')
def date_gregorian(data: str) -> bool:
    # data = input('Введите дату в формате DD.MM.YYYY: ')
    # result = data.split('.')
    date, month, year = data.split('.')
    date, month, year = int(date), int(month), int(year)
    print(date, month, year)
    if date > 0 and date <= 31 and month > 0 and month <= 12 and year > 0 and year <= 9999:
        return True
    else:
        return False

print(date_gregorian(data_1))




